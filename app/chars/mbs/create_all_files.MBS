!*************************** create_all_files *******************************
! +++
! Create all solid character TXT files with point data
!
! 2022-12-27 Gunnar Liden
! ---
!****************************************************************************
!sdesce Create all solid character TXT files with point data

GLOBAL GEOMETRY MODULE create_all_files (

INT  debug_case := 1 >"Debug case ");

! Internal variables

! Directory with the STL lower case characters
CONSTANT STRING stl_lc_dir= "C:\Varkon\app\chars\stl\LowerCase\";

! Directory with the STL upper case characters
CONSTANT STRING stl_uc_dir= "C:\Varkon\app\chars\stl\UpperCase\";

! End of file name for an STL character
CONSTANT STRING stl_end_fname= "_ascii.stl";

! Directory for the output TXT files
CONSTANT STRING txt_dir= "C:\Varkon\app\chars\data\"; 

! Full name of the file that holds all character sizes
CONSTANT STRING file_char_sizes= "C:\Varkon\app\chars\data\char_sizes.txt";

! Start part of the TXT file name
CONSTANT STRING txt_start_fname= "char_"; 

! Lower character part of the TXT file name
CONSTANT STRING txt_lc= "lc_"; 

! Upper character part of the TXT file name
CONSTANT STRING txt_uc= "uc_"; 

! End of file name for a TXT character
CONSTANT STRING txt_end_fname= ".txt";

CONSTANT INT array_length=26;   ! Character array length
STRING upper_case_array(26)*1;  ! Array with upper case characters
STRING lower_case_array(26)*1;  ! Array with lower case characters

INT char_number;                ! Loop variable character

STRING stl_file_name*132;       ! STL full file name
STRING txt_file_name*132;       ! TXT full file name

STRING char_code_name*30;       ! Character code name equal TXT file name

STRING current_char*30;         ! Current character

FILE   f_sizes;                 ! File object for the sizes TXT file

BEGINMODULE

  upper_case_array( 1):= "A";
  upper_case_array( 2):= "B";
  upper_case_array( 3):= "C";
  upper_case_array( 4):= "D";
  upper_case_array( 5):= "E";
  upper_case_array( 6):= "F";
  upper_case_array( 7):= "G";
  upper_case_array( 8):= "H";
  upper_case_array( 9):= "I";
  upper_case_array(10):= "J";
  upper_case_array(11):= "K";
  upper_case_array(12):= "L";
  upper_case_array(13):= "M";
  upper_case_array(14):= "N";
  upper_case_array(15):= "O";
  upper_case_array(16):= "P";
  upper_case_array(17):= "Q";
  upper_case_array(18):= "R";
  upper_case_array(19):= "S";
  upper_case_array(20):= "T";
  upper_case_array(21):= "U";
  upper_case_array(22):= "V";
  upper_case_array(23):= "W";
  upper_case_array(24):= "X";
  upper_case_array(25):= "Y";
  upper_case_array(26):= "Z";

  lower_case_array( 1):= "a";
  lower_case_array( 2):= "b";
  lower_case_array( 3):= "c";
  lower_case_array( 4):= "d";
  lower_case_array( 5):= "e";
  lower_case_array( 6):= "f";
  lower_case_array( 7):= "g";
  lower_case_array( 8):= "h";
  lower_case_array( 9):= "i";
  lower_case_array(10):= "j";
  lower_case_array(11):= "k";
  lower_case_array(12):= "l";
  lower_case_array(13):= "m";
  lower_case_array(14):= "n";
  lower_case_array(15):= "o";
  lower_case_array(16):= "p";
  lower_case_array(17):= "q";
  lower_case_array(18):= "r";
  lower_case_array(19):= "s";
  lower_case_array(20):= "t";
  lower_case_array(21):= "u";
  lower_case_array(22):= "v";
  lower_case_array(23):= "w";
  lower_case_array(24):= "x";
  lower_case_array(25):= "y";
  lower_case_array(26):= "z";
  
  
  OPEN(f_sizes, "w", file_char_sizes);
  IF IOSTAT(f_sizes) < 0 THEN
     EXIT("create_all_files Failure opening sizes TXT file " + file_char_sizes);
  ENDIF;
  
! Write header data to the sizes TXT file
  OUTSTR(f_sizes, "This file was generated by create_all_files and stl_to_txt:");
  OUTLIN(f_sizes);   
  OUTSTR(f_sizes, file_char_sizes);
  OUTLIN(f_sizes); 
  OUTSTR(f_sizes, "Do not change anything manually!");
  OUTLIN(f_sizes); 
   
! Close the sizes TXT file
  CLOSE(f_sizes);
  
! Loop for the upper case characters
  FOR char_number:= 1 TO array_length DO
  
    current_char := upper_case_array(char_number);
	
	current_char := CHR(ASCII(current_char) + 32);

    stl_file_name := stl_uc_dir + current_char + stl_end_fname;
  
    txt_file_name := txt_dir + txt_start_fname + txt_uc + current_char + txt_end_fname;   
	
	char_code_name := txt_start_fname + txt_uc + current_char;
	
	PART(#1, stl_to_txt(stl_file_name, txt_file_name, file_char_sizes, char_code_name, debug_case));
  
  ENDFOR;

! Loop for the lower case characters
  FOR char_number:= 1 TO array_length DO
  
    current_char := lower_case_array(char_number);

    stl_file_name := stl_lc_dir + current_char + stl_end_fname;
  
    txt_file_name := txt_dir + txt_start_fname + txt_lc + current_char + txt_end_fname;  
	
	char_code_name := txt_start_fname + txt_lc + current_char;
	
	PART(#2, stl_to_txt(stl_file_name, txt_file_name, file_char_sizes, char_code_name, debug_case));
  
  ENDFOR;
  
  
    
  
ENDMODULE

































