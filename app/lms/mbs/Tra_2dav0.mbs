!******************************************************************
! +++ 
!
! Create transformation with scaling and translation for 2D drawing
!
! The input is a coordinate system which defines the 2D view 
! on the 2D drawing (surface diagram in application figurblad)
!
! Output is reference to a transformation which can be used to 
! transformate 3D geometry (curves - not surface curves, points, 
! surfaces, etc.) to the 2D drawing. The geometry will be 
! scaled and translated.     
!
! Revision history
! ________________
!
! 1996-02-25 Gunnar Liden
!
! +++
!******************************************************************

GLOBAL GEOMETRY MODULE tra_2dav0 (
    REF    csys_id;              ! Coordinate system defining 2D view
    FLOAT  skala;                ! Scale (scale factor= 1/skala)
    FLOAT  x0;                   ! Origin for scaling X coordinate
    FLOAT  y0;                   ! Origin for scaling Y coordinate
    FLOAT  z0;                   ! Origin for scaling Z coordinate
VAR REF    tra_id);              ! Transformation (global reference)

!sdesce Create transformation with scaling and translation for 2D drawing
!sdescs Skapa transformation med skalning och translation f|r figurblad (2D)


! Internal variables

  INT    DEBUG;                   ! Eq. 0: No      debug
                                  ! Eq. 1: Full    debug

  STRING csys_name*10;            ! Name of coordinate system
  FLOAT  csys_data(4,4);          ! Coord. system  matrix
  INT    i_r;                     ! Loop index matrix
  FLOAT  tra_data(4,4);           ! Transformation matrix

BEGINMODULE

! +++
! Algorithm
! _________
! ---

! +++
! 1. Initializations and checks
! ---

  DEBUG:= 0;                        ! Change to 0, 1 or 2

  tra_id := #0;                     ! Initialize output data

  IF  skala < 0.0001 THEN           ! Check scale
    EXIT("tra_2dav0 scale "+        !
         "< 0.0001");               !
  ENDIF;                            !

! +++
! 2. Calculate transformation matrix
! ---

  GETCSY(csys_id,csys_name,         ! Get all data for the 
           csys_data);              ! coordinate system

  tra_data(1,1) := csys_data(1,1)/skala;
  tra_data(1,2) := csys_data(2,1)/skala;
  tra_data(1,3) := csys_data(3,1)/skala;
  tra_data(1,4) := 
    -(
    csys_data(1,1)*csys_data(1,4) +
    csys_data(2,1)*csys_data(2,4) +
    csys_data(3,1)*csys_data(3,4))
    -(
    csys_data(1,1)*x0             +
    csys_data(2,1)*y0             +
    csys_data(3,1)*z0            )/skala;

  tra_data(2,1) := csys_data(1,2)/skala;
  tra_data(2,2) := csys_data(2,2)/skala;
  tra_data(2,3) := csys_data(3,2)/skala;
  tra_data(2,4) := 
    -(
    csys_data(1,2)*csys_data(1,4) +
    csys_data(2,2)*csys_data(2,4) +
    csys_data(3,2)*csys_data(3,4))
    -(
    csys_data(1,2)*x0             +
    csys_data(2,2)*y0             +
    csys_data(3,2)*z0            )/skala;

  tra_data(3,1) := csys_data(1,3)/skala;
  tra_data(3,2) := csys_data(2,3)/skala;
  tra_data(3,3) := csys_data(3,3)/skala;
  tra_data(3,4) := 
    -(
    csys_data(1,3)*csys_data(1,4) +
    csys_data(2,3)*csys_data(2,4) +
    csys_data(3,3)*csys_data(3,4))
    -(
    csys_data(1,3)*x0             +
    csys_data(2,3)*y0             +
    csys_data(3,3)*z0            )/skala;

  tra_data(4,1) := csys_data(4,1);
  tra_data(4,2) := csys_data(4,2);
  tra_data(4,3) := csys_data(4,3);
  tra_data(4,4) := csys_data(4,4);

  TFORM_USRDEF(#1, tra_data); 
  tra_id:= GLOBAL_REF(#1);   

  IF DEBUG = 1 THEN                 ! Debug printout to screen
    LST_INI("Output transformation reference "+RSTR(tra_id)+" (tra_2dav0)");
    FOR  i_r := 1 TO 4 DO
        LST_LIN(" c"+STR(i_r,-1,0)+"1 "+STR(csys_data(i_r,1),12,8) +
                " c"+STR(i_r,-1,0)+"2 "+STR(csys_data(i_r,2),12,8) +
                " c"+STR(i_r,-1,0)+"3 "+STR(csys_data(i_r,3),12,8) +
                " c"+STR(i_r,-1,0)+"4 "+STR(csys_data(i_r,4),12,8) );
    ENDFOR;
    FOR  i_r := 1 TO 4 DO
        LST_LIN(" t"+STR(i_r,-1,0)+"1 "+STR( tra_data(i_r,1),12,8) +
                " t"+STR(i_r,-1,0)+"2 "+STR( tra_data(i_r,2),12,8) +
                " t"+STR(i_r,-1,0)+"3 "+STR( tra_data(i_r,3),12,8) +
                " t"+STR(i_r,-1,0)+"4 "+STR( tra_data(i_r,4),12,8) );
    ENDFOR;
    LST_EXI();
  ENDIF;                   


ENDMODULE

