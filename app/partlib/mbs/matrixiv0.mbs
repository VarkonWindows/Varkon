!********************* matrixiv0 ***************************************
! +++
! Invertation of a 4X4 matrix
! ---
!
!  Revision history
!  ________________
!
!  1997-02-16  Gunnar Liden
!
!************************************************************************

!sdesce Invertation of a 4X4 matrix
!sdescs Invertering av en 4X4 matris

BASIC GEOMETRY MODULE matrixiv0
(
VAR FLOAT  A(4,4);               ! Input  4X4 matrix 
VAR FLOAT  B(4,4) );             ! Output 4X1 matrix

! Internal variables

  FLOAT  deter;                   ! Determinant

  FLOAT  acg11,acg12,acg13,acg14; ! Algebraic complement
  FLOAT  acg21,acg22,acg23,acg24; !
  FLOAT  acg31,acg32,acg33,acg34; !
  FLOAT  acg41,acg42,acg43,acg44; !

  FLOAT  U(4,4);                  ! Unity matrix (check)

  INT    DEBUG;                   ! Debug

BEGINMODULE

  DEBUG := 0;

! Determinant

  PART(#1,matrixdv0( A, deter ):SAVE=0);

  IF  ABS(deter) < 0.000001 THEN
    EXIT("matrixiv0 Determinant = 0");
  ENDIF;

! Algebraic complement matrix

! Element acg11

      acg11:=  A(2,2) * A(3,3) * A(4,4) +
               A(2,3) * A(3,4) * A(4,2) +
               A(2,4) * A(3,2) * A(4,3) +
        (-1.0)*A(2,2) * A(3,4) * A(4,3) +
        (-1.0)*A(2,3) * A(3,2) * A(4,4) +
        (-1.0)*A(2,4) * A(3,3) * A(4,2);

      acg11:=   acg11/deter;
      
! Element acg12
      
      acg12:=  A(2,1) * A(3,3) * A(4,4) +
               A(2,3) * A(3,4) * A(4,1) +
               A(2,4) * A(3,1) * A(4,3) +
        (-1.0)*A(2,1) * A(3,4) * A(4,3) +
        (-1.0)*A(2,3) * A(3,1) * A(4,4) +
        (-1.0)*A(2,4) * A(3,3) * A(4,1);

       acg12:= (-1.0)*acg12/deter;

! Element acg13

      acg13:=        A(2,1) *       A(3,2) *       A(4,4) +
                     A(2,2) *       A(3,4) *       A(4,1) +
                     A(2,4) *       A(3,1) *       A(4,2) +
        (-1.0)*      A(2,1) *       A(3,4) *       A(4,2) +
        (-1.0)*      A(2,2) *       A(3,1) *       A(4,4) +
        (-1.0)*      A(2,4) *       A(3,2) *       A(4,1);

       acg13:=   acg13/deter;

! Element acg14

      acg14:=        A(2,2) *       A(3,3) *       A(4,1) +
                     A(2,3) *       A(3,1) *       A(4,2) +
                     A(2,1) *       A(3,2) *       A(4,3) +
        (-1.0)*      A(2,2) *       A(3,1) *       A(4,3) +
        (-1.0)*      A(2,3) *       A(3,2) *       A(4,1) +
        (-1.0)*      A(2,1) *       A(3,3) *       A(4,2);

       acg14:= (-1.0)*acg14/deter;


! Element acg21

      acg21:=        A(1,2) *       A(3,3) *       A(4,4) +
                     A(1,3) *       A(3,4) *       A(4,2) +
                     A(1,4) *       A(3,2) *       A(4,3) +
        (-1.0)*      A(1,2) *       A(3,4) *       A(4,3) +
        (-1.0)*      A(1,3) *       A(3,2) *       A(4,4) +
        (-1.0)*      A(1,4) *       A(3,3) *       A(4,2);

      acg21:=  (-1.0)*acg21/deter;


! Element acg22

      acg22:=        A(1,1) *       A(3,3) *       A(4,4) +
                     A(1,3) *       A(3,4) *       A(4,1) +
                     A(1,4) *       A(3,1) *       A(4,3) +
        (-1.0)*      A(1,1) *       A(3,4) *       A(4,3) +
        (-1.0)*      A(1,3) *       A(3,1) *       A(4,4) +
        (-1.0)*      A(1,4) *       A(3,3) *       A(4,1);

       acg22:=   acg22/deter;


! Element acg23

      acg23:=        A(1,1) *       A(3,2) *       A(4,4) +
                     A(1,2) *       A(3,4) *       A(4,1) +
                     A(1,4) *       A(3,1) *       A(4,2) +
        (-1.0)*      A(1,1) *       A(3,4) *       A(4,2) +
        (-1.0)*      A(1,2) *       A(3,1) *       A(4,4) +
        (-1.0)*      A(1,4) *       A(3,2) *       A(4,1);

       acg23:=  (-1.0)*acg23/deter;


! Element acg24

      acg24:=        A(1,1) *       A(3,2) *       A(4,3) +
                     A(1,2) *       A(3,3) *       A(4,1) +
                     A(1,3) *       A(3,1) *       A(4,2) +
        (-1.0)*      A(1,2) *       A(3,1) *       A(4,3) +
        (-1.0)*      A(1,3) *       A(3,2) *       A(4,1) +
        (-1.0)*      A(1,1) *       A(3,3) *       A(4,2);

       acg24:=   acg24/deter;

! Element acg31

      acg31:=       A(1,2) *       A(2,3) *       A(4,4) +
                     A(1,3) *       A(2,4) *       A(4,2) +
                     A(1,4) *       A(2,2) *       A(4,3) +
        (-1.0)*      A(1,2) *       A(2,4) *       A(4,3) +
        (-1.0)*      A(1,3) *       A(2,2) *       A(4,4) +
        (-1.0)*      A(1,4) *       A(2,3) *       A(4,2);

      acg31:=   acg31/deter;


! Element acg22 

      acg32:=        A(1,1) *       A(2,3) *       A(4,4) +
                     A(1,3) *       A(2,4) *       A(4,1) +
                     A(1,4) *       A(2,1) *       A(4,3) +
        (-1.0)*      A(1,1) *       A(2,4) *       A(4,3) +
        (-1.0)*      A(1,3) *       A(2,1) *       A(4,4) +
        (-1.0)*      A(1,4) *       A(2,3) *       A(4,1);

       acg32:= (-1.0)*acg32/deter;


! Element acg33

      acg33:=        A(1,1) *       A(2,2) *       A(4,4) +
                     A(1,2) *       A(2,4) *       A(4,1) +
                     A(1,4) *       A(2,1) *       A(4,2) +
        (-1.0)*      A(1,1) *       A(2,4) *       A(4,2) +
        (-1.0)*      A(1,2) *       A(2,1) *       A(4,4) +
        (-1.0)*      A(1,4) *       A(2,2) *       A(4,1);

       acg33:=   acg33/deter;


! Element acg34

      acg34:=        A(1,2) *       A(2,3) *       A(4,1) +
                     A(1,3) *       A(2,1) *       A(4,2) +
                     A(1,1) *       A(2,2) *       A(4,3) +
        (-1.0)*      A(1,2) *       A(2,1) *       A(4,3) +
        (-1.0)*      A(1,3) *       A(2,2) *       A(4,1) +
        (-1.0)*      A(1,1) *       A(2,3) *       A(4,2);

       acg34:= (-1.0)*acg34/deter;

!  Element ac.g41

      acg41:=        A(1,2) *       A(2,3) *       A(3,4) +
                     A(1,3) *       A(2,4) *       A(3,2) +
                     A(1,4) *       A(2,2) *       A(3,3) +
        (-1.0)*      A(1,2) *       A(2,4) *       A(3,3) +
        (-1.0)*      A(1,3) *       A(2,2) *       A(3,4) +
        (-1.0)*      A(1,4) *       A(2,3) *       A(3,2);

      acg41:=   (-1.0)*acg41/deter;


! Element acg42 

      acg42:=        A(1,1) *       A(2,3) *       A(3,4) +
                     A(1,3) *       A(2,4) *       A(3,1) +
                     A(1,4) *       A(2,1) *       A(3,3) +
        (-1.0)*      A(1,1) *       A(2,4) *       A(3,3) +
        (-1.0)*      A(1,3) *       A(2,1) *       A(3,4) +
        (-1.0)*      A(1,4) *       A(2,3) *       A(3,1);

       acg42:=   acg42/deter;


! Element acg43

      acg43:=        A(1,1) *       A(2,2) *       A(3,4) +
                     A(1,2) *       A(2,4) *       A(3,1) +
                     A(1,4) *       A(2,1) *       A(3,2) +
        (-1.0)*      A(1,1) *       A(2,4) *       A(3,2) +
        (-1.0)*      A(1,2) *       A(2,1) *       A(3,4) +
        (-1.0)*      A(1,4) *       A(2,2) *       A(3,1);

       acg43:=   (-1.0)*acg43/deter;


! Element acg44

      acg44:=        A(1,2) *       A(2,3) *       A(3,1) +
                     A(1,3) *       A(2,1) *       A(3,2) +
                     A(1,1) *       A(2,2) *       A(3,3) +
        (-1.0)*      A(1,2) *       A(2,1) *       A(3,3) +
        (-1.0)*      A(1,3) *       A(2,2) *       A(3,1) +
        (-1.0)*      A(1,1) *       A(2,3) *       A(3,2);

       acg44:= acg44/deter;

! To output matrix B

  B(1,1)  :=  acg11;
  B(1,2)  :=  acg21;
  B(1,3)  :=  acg31;
  B(1,4)  :=  acg41;

  B(2,1)  :=  acg12;
  B(2,2)  :=  acg22;
  B(2,3)  :=  acg32;
  B(2,4)  :=  acg42;

  B(3,1)  :=  acg13;
  B(3,2)  :=  acg23;
  B(3,3)  :=  acg33;
  B(3,4)  :=  acg43;

  B(4,1)  :=  acg14;
  B(4,2)  :=  acg24;
  B(4,3)  :=  acg34;
  B(4,4)  :=  acg44;

  IF  DEBUG = 1 THEN
  LST_INI("Invertation of a matrix (matrixiv0)");
  LST_LIN("Input  matrix (determinant= "+STR(deter,15,8)+") :");
  LST_LIN(STR( A(1,1),15,8)+ " "+ STR( A(1,2),15,8)+ " " +
          STR( A(1,3),15,8)+ " "+ STR( A(1,4),15,8));
  LST_LIN(STR( A(2,1),15,8)+ " "+ STR( A(2,2),15,8)+ " " +
          STR( A(2,3),15,8)+ " "+ STR( A(2,4),15,8));
  LST_LIN(STR( A(3,1),15,8)+ " "+ STR( A(3,2),15,8)+ " " +
          STR( A(3,3),15,8)+ " "+ STR( A(3,4),15,8));
  LST_LIN(STR( A(4,1),15,8)+ " "+ STR( A(4,2),15,8)+ " " +
          STR( A(4,3),15,8)+ " "+ STR( A(4,4),15,8));
!  LST_LIN("Local variables matrix:");
!  LST_LIN(STR(acg11,15,8)+ " "+ STR(acg12,15,8)+ " " +
!          STR(acg13,15,8)+ " "+ STR(acg14,15,8));
!  LST_LIN(STR(acg21,15,8)+ " "+ STR(acg22,15,8)+ " " +
!          STR(acg23,15,8)+ " "+ STR(acg24,15,8));
!  LST_LIN(STR(acg31,15,8)+ " "+ STR(acg32,15,8)+ " " +
!          STR(acg33,15,8)+ " "+ STR(acg34,15,8));
!  LST_LIN(STR(acg41,15,8)+ " "+ STR(acg42,15,8)+ " " +
!          STR(acg43,15,8)+ " "+ STR(acg44,15,8));
  LST_LIN("Output matrix:");
  LST_LIN(STR( B(1,1),15,8)+ " "+ STR( B(1,2),15,8)+ " " +
          STR( B(1,3),15,8)+ " "+ STR( B(1,4),15,8));
  LST_LIN(STR( B(2,1),15,8)+ " "+ STR( B(2,2),15,8)+ " " +
          STR( B(2,3),15,8)+ " "+ STR( B(2,4),15,8));
  LST_LIN(STR( B(3,1),15,8)+ " "+ STR( B(3,2),15,8)+ " " +
          STR( B(3,3),15,8)+ " "+ STR( B(3,4),15,8));
  LST_LIN(STR( B(4,1),15,8)+ " "+ STR( B(4,2),15,8)+ " " +
          STR( B(4,3),15,8)+ " "+ STR( B(4,4),15,8));
  LST_LIN("Unity matrix U= A*B (check of invertation):");
  PART(#10, matrixmult ( A, B, U ):SAVE=0);
  LST_LIN(STR( U(1,1),15,8)+ " "+ STR( U(1,2),15,8)+ " " +
          STR( U(1,3),15,8)+ " "+ STR( U(1,4),15,8));
  LST_LIN(STR( U(2,1),15,8)+ " "+ STR( U(2,2),15,8)+ " " +
          STR( U(2,3),15,8)+ " "+ STR( U(2,4),15,8));
  LST_LIN(STR( U(3,1),15,8)+ " "+ STR( U(3,2),15,8)+ " " +
          STR( U(3,3),15,8)+ " "+ STR( U(3,4),15,8));
  LST_LIN(STR( U(4,1),15,8)+ " "+ STR( U(4,2),15,8)+ " " +
          STR( U(4,3),15,8)+ " "+ STR( U(4,4),15,8));
  LST_EXI();
  ENDIF;

ENDMODULE
