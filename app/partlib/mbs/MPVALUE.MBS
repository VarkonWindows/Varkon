!********************* MPVALUE *********************************************
!
! Creates a call in the active module to part PVALUE. It is identical
! to PVALUE but makes it possible to input variable name v1, v2, ...
!
! Default values will also be given to variables:
! epsmax   :=  0.2
! epsmin   := -0.2
! graphic  :=  1
!
! 1992-11-24  Gunnar Liden
! 1993-03-07  Added id for ADD_MBS Gunnar Liden
!************************************************************************

MACRO GEOMETRY MODULE MPVALUE (
REF    curve_id                   > "@t8 Select curve to be modified ";
INT    i_segm  := 3               > "Segment which shall be modified ";
STRING var_i*9 := "v1"            > "Variable v1, v2, .... , v10 " );

! Internal variables

  FLOAT  epsmax;                  ! Upper limit for eps
  FLOAT  epsmin;                  ! Lower limit for eps
  INT    graphic;                 ! Graphical representation 
  INT    i_var;                   ! Number of variable, which is used 


  INT     DEBUG;                  ! Debug flag
                                  ! Eq. 0: No   debug
                                  ! Eq. 1: Full debug

  REF    id;                      ! Identity for ADD_MBS
  STRING p1*80;                   ! Parameter  1 till part
  STRING p2*80;                   ! Parameter  2 till part
  STRING p3*80;                   ! Parameter  3 till part
  STRING p4*80;                   ! Parameter  4 till part
  STRING p5*80;                   ! Parameter  5 till part
  STRING p6*80;                   ! Parameter  6 till part
  STRING p7*80;                   ! Parameter  7 till part

  STRING s*1;                     ! For debug printout with INPMT
  

BEGINMODULE

!                  1. Initiations and check of input data
!                  =======================================


  DEBUG := 0;                     ! Change to 0 or 1
 

  epsmax   :=+0.2;                ! Upper limit for eps
  epsmin   :=-0.2;                ! Lower limit for eps

  graphic := 1;                   ! Graphical representation

  IF SUBSTR(var_i,1,1)<>"v" THEN  ! Check that the first letter is v
    EXIT("Variable name must"+    ! in the variable name
         " begin with v");        !
  ENDIF;                          !

  IF   SUBSTR(var_i,2)=  "1" THEN ! Check that the number of the variable
    ;                             ! is 1, 2, 3, ...., 10
  ELIF SUBSTR(var_i,2)=  "2" THEN ! 
    ;                             ! 
  ELIF SUBSTR(var_i,2)=  "3" THEN !
    ;                             ! 
  ELIF SUBSTR(var_i,2)=  "4" THEN !
    ;                             ! 
  ELIF SUBSTR(var_i,2)=  "5" THEN !
    ;                             ! 
  ELIF SUBSTR(var_i,2)=  "6" THEN !
    ;                             ! 
  ELIF SUBSTR(var_i,2)=  "7" THEN !
    ;                             ! 
  ELIF SUBSTR(var_i,2)=  "8" THEN !
    ;                             ! 
  ELIF SUBSTR(var_i,2)=  "9" THEN !
    ;                             ! 
  ELIF SUBSTR(var_i,2)= "10" THEN !
    ;                             ! 
  ELSE                            !
    EXIT("Variable number must"+  ! 
         " be 1, 2, .. or 10");   !
  ENDIF;                          !

  curve_id :=                     ! One level reference
  GLOBAL_REF(curve_id,1);         !


!            2. Add call of PVALUE in the active module
!            ==========================================


  p1 := RSTR(curve_id);           ! Input curve reference
  p1 := SUBSTR(p1,2);             ! Remove # from global name ##
  p2 := STR(i_segm,-1,0);         ! Segment which shall be modified
  p3 := var_i;                    ! Variable name
  p4 := SUBSTR(var_i,2);          ! Number of variable used
  p5 := STR(epsmax,-12,6);        ! Maximum value
  p6 := STR(epsmin,-12,6);        ! Minimum value
  p7 := STR(graphic,-1,0);        ! Graphical representation

  IF  DEBUG=1  THEN               ! Debug printout for DEBUG=1
   s:=INPMT("MPVALUE: curve_id="  !
   +rstr(curve_id),"",1);         !
   s:=INPMT("p1 curve_id= "       !
       +p1,"",1);                 !
   s:=INPMT("p2 i_segm= "         !
       +p2,"",1);                 !
   s:=INPMT("p3 var_i= "          !
       +p3,"",1);                 !
   s:=INPMT("p4 variabel nr= "    !
       +p4,"",1);                 !
   s:=INPMT("p5 epsmax= "         !
       +p5,"",1);                 !
   s:=INPMT("p6 epsmin= "         !
       +p6,"",1);                 !
   s:=INPMT("p7 graphic= "        !
       +p7,"",1);                 !
  ENDIF;                          !


  id:= ADD_MBS("PART","PVALUE",   ! Add MBS statement PART(PVALUE, ...
           p1,p2,p3,p4,           !
           p5,p6,p7);             !

   s:=INPMT("PVALUE default "+    ! Show default values
      "values epsmax= " + p5 +    !
      " epsmin= " + p6 +          !
      "  <CR>=Continue"           !
          ,"",1);                 !

ENDMODULE
