!**************** fangamasv0 ***************************
!s+++
! CUR_FANGA     
! _________
!
! Funktionen analyserar kvaliten hos en yta av typ LFT_SUR.   
! FANGA analys kan egentligen g|ras p} vilken typ av yta som
! helst. Men ber{kningen blir snabbare och stabilare f|r en
! "conic lofting" yta. 
!
! Tv} vektorer {r, f|rutom ytan, indata till funktionen.
! Dessa vektorer definierar tv} stycken silhuette funktioner,  
! som ber{knas med CUR_SILH funktionen. Se beskrivningen
! av denna funktion (ber{kningsfall 3).
! 
! Utdata fr}n funktionen {r sex stycken FANGA (2D) kurvor, 
! d{r X {r b}gl{ngden f|r "spine" kurvan och d{r Y= F(X) {r
! korda l{ngd eller vinkel m{tt mot den f|rsta indata vektorn.
! F|ljande kurvor skapas (antag identitet {r #2):
!   Kurva                  Beskrivning
!   #2.1   Kordal{ngd mellan start och slut  silhuette kurva
!   #2.2   Kordal{ngd mellan start och mitt  silhuette kurva
!   #2.3   Kordal{ngd mellan mitt  och slut  silhuette kurva
!   #2.4   Vinkel     mellan start och slut  silhuette kurva
!   #2.5   Vinkel     mellan start och mitt  silhuette kurva
!   #2.6   Vinkel     mellan mitt  och slut  silhuette kurva
! 
! Denna funktion bryter mot m|nster i VARKON. Det finns ingen
! annan funktion i systemet som skapar fler storheter f|r ett
! anrop. Eventuellt kommer denna funktion i framtiden att   
! ist{llet skapa en "part" (modul) av en ny typ. Framf|r 
! g{rna f|rslag ..........
! 
! Modultyp: GEOMETRY 
!
! Anrop: CUR_FANGA(identitet,yta,v1,v2, vs,ve,us,ue : attribut)
!
! Obligatoriska parametrar:
!
! yta         (REF)    - Identitet f|r tidigare skapad yta
! v1          (VECTOR) - Definierar riktning f|r start silhouette 
! v2          (VECTOR) - Definierar riktning f|r slut  silhouette 
! vs  ve      (INT)    - Definierar start och slut V "strip":
!                        vs= -1   ==> hela ytan i V riktningen
!                        vs = ve  ==> En "strip"
! us  ue      (FLOAT)  - Definierar del av yta i U riktning:     
!                        us= -1.0 ==> hela ytan i U riktningen
!
! Attribut: PEN, LEVEL, BLANK, CFONT och CDASHL
!
! Exempel:
!
! CUR_FANGA (#43,GLOBAL_REF(#36),VEC(0,1.1,1),VEC(0,1.2,1),1,3,-1.0,-1.0);
! 
! 
!s---
!e+++
! CUR_FANGA
! _____
!
! The function analysis the quality of a LFT_SUR surface.    
! The FANGA analysis method can be used for any type of 
! surface. But the calculation will be faster and more
! stable for a conic lofting surface.
!
! The FANGA analysis is based on three silhouette curves.
! Two of the silhouettes are defined by two input (viewing) 
! direction vectors. The third direction (silhouette) is
! the mid vector.
!
! The silhouette curves are calculated with the CUR_SIL
! function (case 3). See description of this function.
! 
! Output data from the function is six FANGA (2D) curves,  
! where X is the arclength of the spine curve and where    
! Y= F(X) is a chord length or an angle (to the first 
! input direction vector). The following curves are
! created by the function (assume identity #2):  
!   Curve                  Description
!   #2.1   Chord length between start and mid silhouette curve
!   #2.2   Chord length between start and mid silhouette curve
!   #2.3   Chord length between mid   and end silhouette curve
!   #2.4   Angle        between start and end silhouette curve
!   #2.5   Angle        between start and mid silhouette curve
!   #2.6   Angle        between mid   and end silhouette curve
! 
!
!
! Module type: GEOMETRY
!
! Call:  CUR_FANGA(identity,surf,v1,v2,vs,ve,us,ue : attribute)
!
! Parameters:
!
! surf        (REF)    - Identity for previously created surface
! v1          (VECTOR) - Defines start silhouette 
! v2          (VECTOR) - Defines end   silhouette 
! vs  ve      (INT)    - Defines start and end V line
!                        vs= -1   ==> Whole surface in V direction
!                        vs = ve  ==> One strip
! us  ue      (FLOAT)  - Defines part of surface in U direction
!                        us= -1.0 ==> Whole surface in U direction
!
! Attribute: PEN, LEVEL, BLANK, CFONT and CDASHL
!
! Example:
!
! CUR_FANGA (#43,GLOBAL_REF(#36),VEC(0,1.1,1),VEC(0,1.2,1),1,3,-1.0,-1.0);
! 
!e---

! Revision history
! ________________
!
! 1994-10-13 Originally written    Gunnar Liden
! 1994-12-03 Comments added        Gunnar Liden
! 1995-05-16 sdesc added           Gunnar Liden
! 1995-06-21 CUR_FANGA implemented Gunnar Liden

!sdesce Add CUR_FANGA statement to active module (analyse LFT_SUR)
!sdescs Addera CUR_FANGA sats till aktiva modulen (analysera LFT_SUR)    

MACRO MODULE fangamasv0 ();

CONSTANT INT language= 1;        ! 1: English Eq. 2: Swedish

! Internal variables:

  STRING select*50;              ! Select prompt string
  STRING svie1*80;               ! Viewing   direction as string
  STRING svie2*80;               ! Viewing   direction as string
  STRING s_ivstart*5;            ! Start V line (strip no) as string
  STRING s_ivend*5;              ! End   V line (strip no) as string
  STRING s_startu*5;             ! Start spine value as string
  STRING s_endu*5;               ! End   spine value as string

  REF    s_id;                   ! Surface identity
  STRING s_ids*132;              ! Surface identity as string


  INT    stype;                  ! Type of surface

  STRING ermess1*50;             ! Error not a LFT_SUR   

  REF    a_id;                   ! ADD_MBS identity

  VECTOR sdir1;                  ! Direction for start silhouette
  VECTOR sdir2;                  ! Direction for end   silhouette
  INT    ivstart;                ! Start strip number (start limit curve number)
  INT    ivend;                  ! End strip number (Eq. start strip no ==> one strip)
  FLOAT  startu;                 ! Start U section value ( <CR> ==> Whole surface)
  FLOAT  endu;                   ! End   U section value (= -1 <==> not defined)
  FLOAT  ydelta;                 ! Delta y for FANGA system
  FLOAT  cscale;                 ! Scale factor for chord curves
  FLOAT  ascale;                 ! Scale factor for angle curves
  INT    f_energy;               ! Eq. 1: Calculate energy for all the FANGA curves
  INT    b_cur1;                 ! Eq. 1: Blank Eq. 0: Show crv chord start-end silhouette
  INT    b_cur2;                 ! Eq. 1: Blank Eq. 0: Show crv chord start-mid silhouette
  INT    b_cur3;                 ! Eq. 1: Blank Eq. 0: Show crv chord   mid-end silhouette
  INT    b_cur4;                 ! Eq. 1: Blank Eq. 0: Show crv angle start-end silhouette
  INT    b_cur5;                 ! Eq. 1: Blank Eq. 0: Show crv angle start-mid silhouette
  INT    b_cur6;                 ! Eq. 1: Blank Eq. 0: Show crv angle   mid-end silhouette
  STRING c_flag*3;               ! Eq NO: No calculation
  INT    graphic;                !  (not yet implemented)
  REF    sur_id;                 ! Surface identity
  REF    spine_id;               ! Spine   identity
  STRING w_case*9;               ! Window case 
                                 ! s_nofile: Statement CUR_FANGA, do not read .MENUE data
                                 ! s_rdfile: Statement CUR_FANGA, read        .MENUE data
                                 ! p_nofile: Part fangaprtv0    , do not read .MENUE data
                                 ! p_rdfile: Part fangaprtv0    , read        .MENUE data

BEGINMODULE 

! 1. Definition of prompt strings
! _______________________________

IF   language = 1 THEN           ! English strings
  select:= "Select surface" +    !
  " (must be a LFT_SUR surface)";!
  ermess1:="FANGA only for a " + !
  "LFT_SUR (SUR_CONIC) surface"; !
ELIF language = 2 THEN           ! Swedish strings
  select:= "Peka p} yta" +       !
  " (m}ste vara en LFT_SUR)";    !
  ermess1:="FANGA bara f|r " +   !
  "SUR_CONIC (LFT_SUR) yta";     !
ELSE                             !
  EXIT("fangamasv0: "+           !
       "Language error");        !
ENDIF;                           !


! 2. Select surface
! _________________

PSH_PMT(select);                 ! Select string to screen
s_id:= IDENT(16);                ! Interactive surface selection
POP_PMT();                       ! Erase message to screen

s_ids:= RSTR(s_id);              ! Surface identity as string
IF s_ids  = "#0.1" THEN          !
  EXIT();                        !
ENDIF;                           !

s_ids:= "GLOBAL_REF("+s_ids+")"; !
s_id := GLOBAL_REF(s_id);        !

GETSURH(s_id,"SUR_TYPE",stype);  ! Retrieve surface type
IF  stype <> 3 THEN              ! Check that it is LFT_SUR surface
EXIT("CUR_FANGA "+ermess1);      !
ENDIF;                           !


w_case   := "s_rdfile";          ! Read .MENUE file with previous input
spine_id := #0;                  !
PART(#2, fangawinv0 (            ! Get input from X window
sdir1, sdir2, ivstart, ivend,    !
startu, endu, ydelta,            !
cscale, ascale, f_energy,        !
b_cur1, b_cur2, b_cur3,          !
b_cur4, b_cur5, b_cur6,          !
c_flag, graphic, s_id, spine_id, !
w_case));                        !
IF  c_flag = "NO"    THEN        ! Check that it is LFT_SUR surface
EXIT();                          !
ENDIF;                           !


! 3. Viewing direction 1
! _______________________

svie1:="VEC( " +                 !
   STR(sdir1.x,15,8)+ ", "+      !
   STR(sdir1.y,15,8)+ ", "+      !
   STR(sdir1.z,15,8)+ " )";      !

! 4. Viewing direction 2
! _______________________


svie2:="VEC( " +                 !
   STR(sdir2.x,15,8)+ ", "+      !
   STR(sdir2.y,15,8)+ ", "+      !
   STR(sdir2.z,15,8)+ " )";      !

! 5. Start strip
! ______________

s_ivstart:= STR(ivstart,-1,0);   !

! 6  End   strip
! ______________

s_ivend  := STR(ivend  ,-1,0);   !

! 7. Start spine
! ______________

s_startu := STR(startu,-15,8);   !

! 8. End   spine
! ______________

s_endu   := STR(endu  ,-15,8);   !

! 6. Create MBS statement
! _______________________

a_id:= ADD_MBS("CUR_FANGA",      ! Create MBS statement 
s_ids, svie1, svie2,             !
s_ivstart, s_ivend,              !
s_startu, s_endu );              !

ENDMODULE 

