! ***************** su_uisop    ****************************
!
!e+++
! su_uisop
! ________
!
! Create U isoparameter curves on a surface
!
!e---
!s+++
! su_uisop
! ________
!
! Skapa ett knippe U isoparameterkurvor pa en yta
!
!s---
!
! Revision history
! ________________
!
! 1995-03-03 Gunnar Liden
! 1996-03-01 delta bug Gunnar Liden
! 1996-03-23 s_isoupar->su_uisop Gunnar Liden
!
!************************************************************

!sdesce Create U isoparameter curves on a surface
!sdescs Skapa ett knippe U isoparameterkurvor p} en yta

GLOBAL GEOMETRY MODULE su_uisop    (

REF    s_id                  > "@t16 Peka p} en yta";
INT    n_u         := 30     > "Ange antal U parameter kurvor (minst 2)");


! Internal variables

  INT    npatu;                  ! No patches in U direction
  INT    npatv;                  ! No patches in V direction

  STRING iso_c*1;                ! Isoparameter U or V
  FLOAT  start_p;                ! Parameter for start point
  FLOAT  end_p;                  ! Parameter for end   point

  INT    i_u;                    ! Loop index U parameters

  FLOAT  delta;                  ! Delta parameter value

BEGINMODULE

!e+++
! Algorithm
! _________
!e---
!s+++
! Algoritm
! ________
!s---

!e+++
! Retrieve number of patches. Calls of GETSURH.
!e---
!s+++
! Ta reda p} antal "patches" i ytan. Anrop av GETSURH.
!s---


  GETSURH(s_id,"NPATU",npatu);   ! Retrieve number of U patches
  GETSURH(s_id,"NPATV",npatv);   ! Retrieve number of V patches

!e+++
! Create U parameter lines. Calls of CUR_ISO.
!e---
!s+++
! Skapa U parameter kurvor. Anrop av CUR_ISO.
!s---

  IF n_u >= 2 THEN               ! Delta parameter
    delta:= npatu/(n_u-1);       !
  ELSE                           !
    EXIT("su_uisop  n_u < 2");   !
  ENDIF;

  iso_c  := "U";                 ! Type of isoparameter
  start_p:=   0.0;               ! Start value 
  end_p  :=   npatv;             ! End   value

  FOR i_u:= 1 TO  n_u  DO        ! Start loop U curves

    CUR_ISO(#1,s_id,iso_c,       ! Isoparameter
        (i_u-1)*delta,           !
        start_p,end_p);          !

  ENDFOR;                        ! End   loop U curves    


ENDMODULE
