! ***************** getworter   **************************** 
! 
! +++ 
! Get identities for random words
! 
! --- 
! 
! Revision history 
! ________________ 
! 
! 2000-10-13 Gunnar Liden 
!  
!************************************************************ 
 
!sdesce Get identities for random words


BASIC GEOMETRY MODULE getworter (
    STRING prt_name*10;       ! Part name (empty = all parts)
    INT    n_all;             ! Total number of words to be retrieved
VAR REF    all_id(100));      ! All identities for the retrieved words
 
! Internal variables 

  INT    r_wort(100);      ! Defines the words that shall be retrieved
  INT    n_wort;           ! Total number of words

  REF    prt_id;           ! Identity for part

  INT    i_wort;           ! Loop index

  INT    start_seed;       ! Start seed number
                           ! Eq. 1-1000: Start seed
                           ! Eq. 0: Use prev calculated lSeed1 and lSeed2
  INT    lSeed1;           ! Input/output seed value 1
  INT    lSeed2;           ! Input/output seed value 2
  FLOAT  r_value;          ! Random value between 0 and 1
  INT    r_candidate;      ! Candidate random value
 
  INT    year;             ! Date data (used for start_seed)
  INT    month;            !
  INT    day;              !
  INT    hour;             !
  INT    minute;           !
  INT    second;           !

  INT    n_rand;           ! Number of generated random numbers
  INT    i_rand;           ! Loop index defined random number
  INT    n_max;            ! Maximum number of generated random numbers
  INT    i_max;            ! Loop index all generated random numbers


  CONSTANT  INT    i_undef = -12345;        ! Undefined integer
  CONSTANT  FLOAT  f_undef = -0.123456789;  ! Undefined float
 
  CONSTANT  INT list = 0;

  
BEGINMODULE

! +++
! 1. Checks and initializations
! ---
  IF  n_all > 0 AND n_all < 101 THEN
    ;
  ELSE
    EXIT("getworter Anzahl Worter nicht zwischen 1 und 100");
  ENDIF;

! Initialization of variables
  FOR  i_wort := 1 TO 100 DO
    all_id(i_wort)    := #0;
    r_wort(i_wort)    := i_undef;
  ENDFOR;

! Initialization of internal variables

  prt_id     := #0;
  n_wort     := i_undef;
  year       := i_undef;
  month      := i_undef;
  day        := i_undef;
  hour       := i_undef;
  minute     := i_undef;
  second     := i_undef;
  start_seed := i_undef;
  r_value    := f_undef;
  n_rand     := i_undef;
  i_rand     := i_undef;
  n_max      := i_undef;
  i_max      := i_undef;
  r_candidate:= i_undef;


! +++
! 2. Get all point data
! ---
 
  SET_ROOT_GM(#0);
  n_wort  := 0;
 
next_prt:; ! Label next part

! Get next part
  prt_id := GET_NEXT_GM (0, 16384, prt_name);

! End of scanning if all parts are retrieved
  IF  prt_id = #0 THEN
    GOTO all_prt;
  ENDIF;

! An additional part is found
  n_wort := n_wort + 1;
!  IF  n_wort < 100 THEN ! Temporary
!     all_id(n_wort)     := prt_id;
!  ENDIF;

  GOTO  next_prt;

all_prt:; ! Label all objects are retrieved

  IF  n_wort = 0 THEN
    EXIT("getworter Es gibt keine "+prt_name);
  ENDIF;

  IF  n_wort < n_all THEN
    EXIT("getworter Es gibt nur "+STR(n_wort,-1,0)+" von "+prt_name);
  ENDIF;


! +++
! 2. Generate random numbers
! ---

! Get start seed values for random numbers
  TIME(year, month, day, hour, minute, second);
  start_seed := minute*10 + second;
  PART(#2, random_0 (start_seed, lSeed1, lSeed2, r_value):SAVE=0);

! Initialize number of generated random numbers
  n_rand     := 0;
! Maximum number of generated random numbers
  n_max      := 1000;

! Start loop all random numbers
  FOR  i_max := 1 TO n_max DO

!  Random float value
   PART(#3, random_0 ( 0 , lSeed1, lSeed2, r_value):SAVE=0);
!  Candidate integer random value
   r_candidate := TRUNC(r_value*n_wort);
!  If statements added as test without a lot of thinking
   IF  r_candidate < 1 THEN
     r_candidate := 1;
   ENDIF;
   IF  r_candidate > n_wort THEN
     r_candidate := n_wort;
   ENDIF;
!  Investigate if it already exists in array
   FOR  i_rand := 1 TO n_rand DO
     IF  r_candidate = r_wort(i_rand) THEN
       GOTO exists;
     ENDIF;
   ENDFOR;

!  Add random number
   n_rand := n_rand + 1;
   r_wort(n_rand) := r_candidate;

!  All numbers found ?
   IF  n_rand = n_all THEN
     GOTO  enough;
   ENDIF;
  
exists:; ! Label Random number already exists

! End loop all random numbers
  ENDFOR;

enough:; ! Label: Enough random numbers generated

! +++
! 3. Get identities for the generated random numbers
! ---

  SET_ROOT_GM(#0);
  n_wort  := 0;
 
next_prt2:; ! Label next part

! Get next part
  prt_id := GET_NEXT_GM (0, 16384, prt_name);

! End of scanning if all parts are retrieved
  IF  prt_id = #0 THEN
    GOTO all_prt2;
  ENDIF;

! An additional part is found
  n_wort := n_wort + 1;

! Determine if it shall be added to the output array
  FOR  i_rand := 1 TO n_all DO
     IF  n_wort = r_wort(i_rand) THEN
       all_id(i_rand) := prt_id;
     ENDIF;
  ENDFOR;
  

  GOTO  next_prt2;

all_prt2:; ! Label all objects are retrieved

 
! +++
! n. List the data on screen
! ---

  IF  list = 1 THEN
    LST_INI("getworter fur "+prt_name);
    LST_LIN(" ");
    LST_LIN("n_wort =     "+STR(n_wort,6,0));
    LST_LIN("start_seed = "+STR(start_seed,6,0));
    FOR  i_wort := 1 TO n_all DO
      LST_LIN(STR(i_wort,4,0)+" Identitat " + RSTR(all_id(i_wort)));  
      LST_LIN(STR(i_wort,4,0)+" Random    " +  STR(r_wort(i_wort),6,0));  
    ENDFOR;
    LST_EXI();
  ENDIF;

ENDMODULE



